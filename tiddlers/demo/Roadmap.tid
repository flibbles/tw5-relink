caption: Roadmap
title: Roadmap

This page is meant more for the developer so they don't forget what's left to do.

* Split whitelists into neat categories based on plugin
** Related: create an example third-party plugin to show how that works.
* Make the tab-sensitive demo links actual links, not buttons. Also add links to relink configuration page when appropriate.
* Add in form validation for //add// fields in configuration.
* Improve UI in configuration menu. Delete buttons shouldn't get that much space. Maybe have examples for each row in gray.
* I think the code is supposed to be in the `./plugins/flibbles/relink` dir, not the `./plugins/relink` dir.
* Macros cached after encountering `<$importvariables>` should be popped after encountering `</$importvariables>`.
* Possibly remove the package.json file. This isn't an npm package. It isn't something any other coder would need except for me, the author.
* Organize the unit tests better. Especially relink.js. That's kind of a misc test set that should be categorized more logically.
* Improve documentation on README to be more clear.
* There are TODOs scattered throughout the code which need to be addressed.
* Document the filters included with //Relink//.
* Write tests to confirm relink:references filter, and its interaction with the to-update filter.
** Also, ensure that relink:references works on input and isn't a generator. This may require creating [all[relinkable]]
* Make the demo template show text and result side-by-side rather than top and bottom.
* On relink failure, at least change as many instances as possible rather than giving up on an entire tiddler.
* Possible issue with `<$importvariables>` widgets being called whose attributes depend on macros defined immediately preceding the widget call. `\define macro() blah\n\n<$importvariables filter=<<blah>> >...`
** And I need to track variables set in `<$set>` even though those aren't ever involved in relinking. They may be part of an importvariables attribute value.
* Better application of wikitext rules in ~WikiRelinking. Pragma first, then block and inline
** Right now, if `\define relink-??()` is encountered after pragmas should no longer be parsed, this is still relinked if its title matches the fromTitle. I'm not actually sure I should prevent this. It's a weird use case, but I think the user will still probably want it replaced.
