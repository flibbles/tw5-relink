{"name":"Relink Titles",
"title":"$:/plugins/flibbles/relink-titles",
"description":"Renames tiddlers with titles derived from Relinked tiddler",
"author":"Flibbles",
"version":"2.0.0",
"core-version":">=5.1.22",
"parent-plugin":"$:/plugins/flibbles/relink",
"source":"https://github.com/flibbles/tw5-relink",
"demo":"http://flibbles.github.io/tw5-relink/",
"list":"readme configuration",
"dependents":"",
"plugin-type":"plugin",
"type":"application/json",
"text":"{\n    \"tiddlers\": {\n        \"$:/plugins/flibbles/relink-titles/configuration\": {\n            \"title\": \"$:/plugins/flibbles/relink-titles/configuration\",\n            \"caption\": \"{{$:/plugins/flibbles/relink-titles/language/Caption}}\",\n            \"tags\": \"$:/tags/flibbles/relink/Configuration\",\n            \"text\": \"\\\\define lingo-base() $:/plugins/flibbles/relink-titles/language/\\n\\\\define prefix() $:/config/flibbles/relink-titles/relink/\\n\\n<<lingo Help>>\\n\\n<table>\\n<tbody>\\n<$list filter=\\\"[[relinktitlesrule]modules[]]\\\">\\n<tr>\\n<td>\\n<$checkbox\\n\\ttiddler={{{ [all[current]addprefix<prefix>] }}}\\n\\tfield=\\\"text\\\"\\n\\tchecked=\\\"enabled\\\"\\n\\tunchecked=\\\"disabled\\\"\\n\\tdefault=\\\"enabled\\\"\\n> ''{{!!caption}}''</$checkbox></td><td>\\n\\n<$transclude field='description' />\\n\\n</td></tr></$list>\\n</tbody></table>\\n\"\n        },\n        \"$:/plugins/flibbles/relink-titles/language/Caption\": {\n            \"title\": \"$:/plugins/flibbles/relink-titles/language/Caption\",\n            \"text\": \"Titles\"\n        },\n        \"$:/plugins/flibbles/relink-titles/language/Directory/Caption\": {\n            \"title\": \"$:/plugins/flibbles/relink-titles/language/Directory/Caption\",\n            \"text\": \"Rename subdirectories\"\n        },\n        \"$:/plugins/flibbles/relink-titles/language/Directory/Description\": {\n            \"title\": \"$:/plugins/flibbles/relink-titles/language/Directory/Description\",\n            \"text\": \"For wikis set up hierarchically using `/`, like a filesystem. This option will update all tiddlers nested inside the target tiddler. i.e. `fromTiddler/path/file` becomes `toTiddler/path/file`.\"\n        },\n        \"$:/plugins/flibbles/relink-titles/language/Help\": {\n            \"title\": \"$:/plugins/flibbles/relink-titles/language/Help\",\n            \"text\": \"See the <a href={{{ [{$:/plugins/flibbles/relink-titles!!demo}addsuffix[#Plugins/Titles]] }}}>//Relink-titles// documentation page</a> for details.\"\n        },\n        \"$:/plugins/flibbles/relink-titles/readme\": {\n            \"title\": \"$:/plugins/flibbles/relink-titles/readme\",\n            \"text\": \"Highly customizable relinking of tiddler titles //related// to the renamed tiddler.\\n\\n* Rename a hierarchy of subtiddlers when renaming a root tiddler.\\n* Make custom filter rules to rename other tiddlers the way you want when Relinking.\\n* Integrates with other plugins for plugin-specific rules.\\n\\nSee <a href={{$:/plugins/flibbles/relink-titles!!source}}>the tw5-relink website</a> for more details and examples.\\n\\n{{$:/core/images/warning}} ''Warning:'' You must use //Relink// v1.10.2 or greater with this, or this plugin may delete some tiddler bodies while trying to relink titles.\\n\"\n        },\n        \"$:/plugins/flibbles/relink-titles/relinkoperations/title.js\": {\n            \"title\": \"$:/plugins/flibbles/relink-titles/relinkoperations/title.js\",\n            \"text\": \"/*\\\\\\nmodule-type: relinkoperator\\ntitle: $:/plugins/flibbles/relink-titles/relinkoperations/title.js\\ntype: application/javascript\\n\\nRenames tiddlers which have titles derived from fromTitle. Then it makes\\nsure that those tiddlers are properly relinked too.\\n\\n\\\\*/\\n\\n/*jslint node: false, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar configPrefix = \\\"$:/config/flibbles/relink-titles/relink/\\\";\\nvar utils = require('$:/plugins/flibbles/relink/js/utils.js');\\nutils.getContext('whitelist').hotDirectories.push(configPrefix);\\n\\nvar titleRules = Object.create(null);\\n$tw.modules.forEachModuleOfType('relinktitlesrule', function(title, module) {\\n\\ttitleRules[title] = module;\\n});\\n\\nexports.name = 'title';\\n\\nexports.report = function(tiddler, callback, options) {\\n\\tvar cache = getCache(options),\\n\\t\\trules = cache.rules;\\n\\tfor (var i = 0; i < rules.length; i++) {\\n\\t\\trules[i].report(tiddler.fields.title, function(title, blurb) {\\n\\t\\t\\tcallback(title, blurb ? ('title: ' + blurb) : 'title');\\n\\t\\t}, options);\\n\\t}\\n};\\n\\nexports.relink = function(tiddler, fromTitle, toTitle, changes, options) {\\n\\tvar cache = getCache(options),\\n\\t\\ttitle = tiddler.fields.title;\\n\\tif (!cache.touched[title]) {\\n\\t\\tvar rules = cache.rules;\\n\\t\\tfor (var i = 0; i < rules.length; i++) {\\n\\t\\t\\tvar rule = rules[i];\\n\\t\\t\\tvar entry = rule.relink(title, fromTitle, toTitle, options);\\n\\t\\t\\tif (entry) {\\n\\t\\t\\t\\tvar result = entry.output;\\n\\t\\t\\t\\tif (result && (result !== title)) {\\n\\t\\t\\t\\t\\tif (options.wiki.getTiddler(result) || cache.touched[result]) {\\n\\t\\t\\t\\t\\t\\t// There's already a tiddler there. We won't clobber it.\\n\\t\\t\\t\\t\\t\\tentry.impossible = true;\\n\\t\\t\\t\\t\\t\\tentry.output = undefined;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tcache.touched[result] = true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t// Record that we've touched this one, so we only touch it once.\\n\\t\\t\\t\\t// Both its prior and latter. Neither should be touched again.\\n\\t\\t\\t\\tcache.touched[title] = true;\\n\\t\\t\\t\\tchanges.title = entry;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n};\\n\\nfunction getCache(options) {\\n\\treturn utils.getCacheForRun(options, 'titles', function() {\\n\\t\\treturn {\\n\\t\\t\\trules: getRules(options.wiki),\\n\\t\\t\\ttouched: Object.create(null)\\n\\t\\t};\\n\\t});\\n};\\n\\nfunction getRules(wiki) {\\n\\tvar activeRules = [];\\n\\tfor (var rule in titleRules) {\\n\\t\\tvar configTiddler = wiki.getTiddler(configPrefix + rule);\\n\\t\\tif (!configTiddler || configTiddler.fields.text !== \\\"disabled\\\") {\\n\\t\\t\\tactiveRules.push(titleRules[rule]);\\n\\t\\t}\\n\\t}\\n\\treturn activeRules;\\n};\\n\",\n            \"module-type\": \"relinkoperator\",\n            \"type\": \"application/javascript\"\n        },\n        \"$:/plugins/flibbles/relink-titles/rules/directory\": {\n            \"title\": \"$:/plugins/flibbles/relink-titles/rules/directory\",\n            \"text\": \"/*\\\\\\ncaption: {{$:/plugins/flibbles/relink-titles/language/Directory/Caption}}\\ndescription: {{$:/plugins/flibbles/relink-titles/language/Directory/Description}}\\nmodule-type: relinktitlesrule\\ntitle: $:/plugins/flibbles/relink-titles/rules/directory\\ntype: application/javascript\\n\\nHandles subdirectory renaming.\\n\\n\\\\*/\\n\\n/*jslint node: false, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.name = 'directory';\\n\\n/**The report returns all parent directories of a given title which exist.\\n */\\nexports.report = function(title, callback, options) {\\n\\tvar index = -1;\\n\\twhile ((index = title.indexOf('/', index+1)) >= 0) {\\n\\t\\tvar dir = title.substr(0, index);\\n\\t\\tcallback(dir, '.' + title.substr(index));\\n\\t}\\n};\\n\\n/**The relink returns the new title (if any) derived from title for a given\\n * rename of fromTitle to toTitle.\\n */\\nexports.relink = function(title, fromTitle, toTitle, options) {\\n\\tvar length = fromTitle.length;\\n\\tif (title.charAt(length) === '/' && title.substr(0, length) === fromTitle) {\\n\\t\\treturn {output: toTitle + title.substr(length)};\\n\\t}\\n\\treturn undefined;\\n};\\n\",\n            \"caption\": \"{{$:/plugins/flibbles/relink-titles/language/Directory/Caption}}\",\n            \"description\": \"{{$:/plugins/flibbles/relink-titles/language/Directory/Description}}\",\n            \"module-type\": \"relinktitlesrule\",\n            \"type\": \"application/javascript\"\n        }\n    }\n}"}
